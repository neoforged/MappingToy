import net.neoforged.gradleutils.PomUtilsExtension.License

plugins {
  id 'org.cadixdev.licenser' version '0.6.1'
  id 'net.neoforged.gradleutils' version '3.0.0-alpha.12'
  id 'com.github.johnrengelman.shadow' version '8.1.1'
  id 'maven-publish'
  id 'java'
  id 'eclipse'
  id 'idea'
}

ext {
    ASM_VERSION = '9.5'
}

repositories {
    mavenLocal()
    maven { url = 'https://maven.neoforged.net/releases/' }
    mavenCentral()
}

dependencies {
    implementation "org.ow2.asm:asm:${ASM_VERSION}"
    implementation "org.ow2.asm:asm-commons:${ASM_VERSION}"
    implementation "org.ow2.asm:asm-tree:${ASM_VERSION}"
    implementation "org.ow2.asm:asm-util:${ASM_VERSION}"
    implementation 'net.sf.jopt-simple:jopt-simple:6.0-alpha-3'
    implementation 'com.google.code.gson:gson:2.8.7'
    implementation 'net.neoforged:mergetool:2.0.5'
    implementation 'net.neoforged:srgutils:1.0.1'
}

ext {
    MAIN_CLASS = 'net.neoforged.mappingtoy.MappingToy'
    SPEC_VERSION = gradleutils.gitInfo.tag
}

group = 'net.neoforged'
version = gradleutils.version
java.toolchain.languageVersion = JavaLanguageVersion.of(8)

license {
  header project.file('LICENSE-header.txt')
  newLine false
}

ext {
    MANIFEST = manifest{
        if (MAIN_CLASS != null)
            attributes('Main-Class': MAIN_CLASS)
        attributes([
            'Specification-Title':      project.name,
            'Specification-Vendor':     'NeoForged',
            'Specification-Version':    SPEC_VERSION,
            'Implementation-Title':     project.name,
            'Implementation-Version':   project.version,
            'Implementation-Vendor':    'NeoForged'
        ] as LinkedHashMap, project.group.replaceAll('\\.', '/') + '/' + project.name + '/')
    }
}

compileJava {
    options.encoding = 'UTF-8'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
    manifest.from(MANIFEST)
}

artifacts {
    archives sourcesJar
    archives shadowJar
}

jar {
    manifest.from(MANIFEST)
}

shadowJar {
    minimize()
    archiveClassifier = 'all'
    manifest.from(MANIFEST)
}

gradleutils {
    setupSigning()
}

changelog {
    from '2.0'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact sourcesJar
            artifact jar
            artifact shadowJar
            gradleutils.sign(it)

            pom {
                name = project.archivesBaseName
                pomUtils.neoForgedDeveloper(it)
                pomUtils.license(it, License.LGPL_v2)
                pomUtils.githubRepo(it, 'MappingToy')
            }
        }
    }
    repositories {
        maven gradleutils.publishingMaven
    }
}